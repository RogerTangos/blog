{"version":3,"sources":["webpack:///./src/templates/templates.style.tsx","webpack:///./src/templates/tags.tsx","webpack:///./src/components/post-card/post-card.style.tsx","webpack:///./src/components/post-card/post-card.tsx"],"names":["BlogPostsWrapper","styled","div","RelatedPostWrapper","RelatedPostTitle","h2","themeGet","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","PostTags","Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","title","description","map","node","index","key","fields","slug","frontmatter","url","excerpt","date","tags","pageQuery","PostCardWrapper","PostPreview","PostDetails","PostDate","PostContent","PostTitle","Excerpt","p","PostCard","image","className","imageType","props","addAllClasses","push","join","to","fluid","alt","fixed","dangerouslySetInnerHTML","__html","defaultProps"],"mappings":"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","file":"component---src-templates-tags-tsx-b5dc1c1894f7f66774e2.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const RelatedPostWrapper = styled.div`\n  margin: 0 auto;\n  padding-left: 75px;\n  padding-right: 75px;\n  @media (min-width: 1550px) {\n    width: 1500px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  @media (max-width: 990px) {\n    padding: 0 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 0 25px 0 25px;\n  }\n`;\n\nexport const RelatedPostTitle = styled.h2`\n  color: ${themeGet('colors.textColor', '#292929')};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet('fontFamily.0', \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-bottom: 30px;\n\n  &:after {\n    content: '';\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nexport const RelatedPostItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`;\n\nexport const RelatedPostItem = styled.div`\n  flex: 0 0 33.333333333%;\n  max-width: 33.333333333%;\n  padding: 0 15px;\n  @media (max-width: 575px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n    &:nth-child(n + 2) {\n      margin-top: 50px;\n    }\n  }\n  .post_card {\n    &:hover {\n      .post_preview {\n        a {\n          transform: scale(1.05);\n        }\n      }\n    }\n\n    .post_preview {\n      margin-bottom: 16px;\n      overflow: hidden;\n      a {\n        display: block;\n        transition: 0.25s ease-in-out;\n      }\n      &:before {\n        filter: blur(10px);\n      }\n    }\n    .post_title {\n      font-size: 21px;\n      a {\n        display: block;\n        white-space: nowrap;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      @media (max-width: 1400px) {\n        font-size: 19px;\n      }\n      @media (max-width: 1200px) {\n        font-size: 17px;\n      }\n      @media (max-width: 990px) {\n        font-size: 15px;\n      }\n    }\n    .post_content {\n      max-width: 100%;\n    }\n\n    .post_tags {\n      margin-top: 20px;\n      a {\n        @media (max-width: 990px) {\n          font-size: 12px;\n          margin-right: 15px;\n        }\n      }\n    }\n  }\n`;\nexport const TagPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 30px 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n    @media (max-width: 990px) {\n      margin-bottom: 80px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\nexport const TagPageHeading = styled.div`\n  padding-left: 210px;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 120px;\n  position: relative;\n  @media (max-width: 1200px) {\n    padding-left: 160px;\n  }\n  @media (max-width: 990px) {\n    padding-left: 0;\n    font-size: 13px;\n    margin-bottom: 80px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 60px;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    width: 90px;\n    height: 1px;\n    background: #292929;\n    margin-top: 15px;\n  }\n`;\n\nexport const TagName = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet('colors.primary', '#D10068')};\n  margin-bottom: 8px;\n  @media (max-width: 990px) {\n    font-size: 26px;\n  }\n  @media (max-width: 575px) {\n    font-size: 22px;\n  }\n`;\nexport const BlogPostFooter = styled.div`\n  margin: 0 0 0 auto;\n  width: 58%;\n  max-width: 100%;\n  padding-top: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media (max-width: 990px) {\n    padding-top: 40px;\n    width: 100%;\n  }\n  &.center {\n    margin: 0 auto;\n  }\n`;\n\nexport const BlogPostComment = styled.div`\n  margin: 0 0 0 auto;\n  width: 58%;\n  max-width: 100%;\n  padding-top: 80px;\n  @media (max-width: 990px) {\n    padding-top: 60px;\n    width: 100%;\n  }\n  &.center {\n    margin: 0 auto;\n  }\n`;\n\nexport const PostShare = styled.div`\n  display: flex;\n  align-items: center;\n  > span {\n    flex-shrink: 0;\n  }\n  > div,\n  .react-share__ShareButton {\n    cursor: pointer;\n    margin-left: 25px;\n    font-size: 22px;\n    outline: 0;\n    color: ${themeGet('colors.textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    @media (max-width: 767px) {\n      font-size: 18px;\n      margin-left: 20px;\n    }\n    &:hover {\n      color: ${themeGet('colors.primary', '#D10068')};\n    }\n    svg {\n      display: block;\n    }\n  }\n`;\n\nexport const BlogPostDetailsWrapper = styled.div`\n  margin: 0 auto;\n  padding: 90px 0 120px 0;\n  padding-left: 75px;\n  padding-right: 75px;\n  @media (min-width: 1550px) {\n    width: 1500px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  @media (max-width: 1199px) {\n    padding: 80px 35px 80px 35px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 60px 25px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostCard from '../components/post-card/post-card';\nimport SEO from '../components/seo';\nimport { TagPostsWrapper, TagPageHeading, TagName } from './templates.style';\n\nconst Tags = ({ pageContext, data }: any) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={tag} description={`A collection of ${totalCount} post`} />\n\n      <TagPostsWrapper>\n        <TagPageHeading>\n          <TagName>{tag}</TagName>\n          {`A collection of ${totalCount} post`}\n        </TagPageHeading>\n        {edges.map(({ node, index }: any) => (\n          <PostCard\n            key={node.fields.slug}\n            title={node.frontmatter.title}\n            url={node.fields.slug}\n            description={node.frontmatter.description || node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n          />\n        ))}\n      </TagPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\n            title\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PostPreview = styled.div`\n  margin-bottom: 45px;\n  position: relative;\n  img {\n    border-radius: 3px;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 80%;\n    height: 80%;\n    background-color: #757575;\n    bottom: 0;\n    left: 10%;\n    filter: blur(15px);\n  }\n`;\n\nexport const PostDetails = styled.div`\n  display: flex;\n`;\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  padding: 30px 35px 15px 35px;\n  margin-right: 20px;\n  line-height: 1;\n  color: ${themeGet('colors.textColor', '#292929')};\n  @media (max-width: 1200px) {\n    font-size: 70px;\n    padding: 25px 25px 15px 25px;\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n    padding: 20px 20px 15px 20px;\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const PostContent = styled.div`\n  align-self: center;\n`;\n\nexport const PostTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet('colors.textColor', '#292929')};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n  }\n  @media (max-width: 1200px) {\n    font-size: 26px;\n  }\n  @media (max-width: 990px) {\n    font-size: 21px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet('fontSizes.3', '15')}px;\n  color: ${themeGet('textColor', '#292929')};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport Img from 'gatsby-image';\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  Excerpt,\n  PostContent,\n  PostTags,\n} from './post-card.style';\n\ninterface PostCardProps {\n  image?: any;\n  title: string;\n  description?: string;\n  url: string;\n  date?: string;\n  tags?: [];\n  className?: string;\n  imageType?: 'fixed' | 'fluid';\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  tags,\n  className,\n  imageType,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['post_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(' ')} {...props}>\n      {image == null ? null : (\n        <PostPreview className=\"post_preview\">\n          <Link to={url}>\n            {imageType === 'fluid' ? (\n              <Img fluid={image} alt=\"post preview\" />\n            ) : (\n              <Img fixed={image} alt=\"post preview\" />\n            )}\n          </Link>\n        </PostPreview>\n      )}\n\n      <PostDetails className=\"post_details\">\n        {date && (\n          <PostDate\n            dangerouslySetInnerHTML={{\n              __html: date,\n            }}\n            className=\"post_date\"\n          />\n        )}\n\n        <PostContent className=\"post_content\">\n          <PostTitle className=\"post_title\">\n            <Link to={\"/\" + url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  );\n};\n\nPostCard.defaultProps = {\n  imageType: 'fluid',\n};\n\nexport default PostCard;\n"],"sourceRoot":""}