{"version":3,"sources":["webpack:///./src/components/post-card-minimal/post-card-minimal.style.tsx","webpack:///./src/components/post-card-minimal/post-card-minimal.tsx","webpack:///./src/templates/blog-list.tsx","webpack:///./src/components/pagination/pagination.style.tsx","webpack:///./src/components/pagination/pagination.tsx"],"names":["PostCardWrapper","styled","div","withConfig","displayName","componentId","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","h2","Excerpt","p","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","_ref","image","title","description","url","date","tags","className","imageType","props","addAllClasses","push","React","Object","assign","join","dangerouslySetInnerHTML","__html","Link","to","Img","fluid","alt","fixed","map","tag","index","key","_kebabCase","defaultProps","BlogList","data","Posts","allMarkdownRemark","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","Layout","SEO","BlogPostsWrapper","node","fields","slug","frontmatter","cover","childImageSharp","excerpt","Pagination","prevLink","nextLink","totalPage","PaginationWrapper","PrevPage","NextPage","PageNumber","aria-label","IoMdArrowRoundBack","IoMdArrowRoundForward"],"mappings":"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","file":"component---src-templates-blog-list-tsx-f5535b39c94306f92d03.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n  &:hover {\n    .post_preview {\n      transform: translateY(0);\n    }\n    .post_date {\n      transform: translateY(100%);\n    }\n  }\n`;\n\nexport const PostPreview = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  transition: 0.35s ease-in-out;\n  img {\n    border-radius: 3px;\n  }\n  @media (max-width: 1024px) {\n    transform: translateY(0);\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n    width: auto;\n    height: auto;\n    position: relative;\n    transform: translateY(0);\n  }\n`;\n\nexport const PostDetails = styled.div`\n  display: flex;\n  @media (max-width: 575px) {\n    flex-direction: column;\n  }\n`;\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${themeGet('colors.textColor', '#292929')};\n  transition: 0.35s ease-in-out;\n  @media (max-width: 1200px) {\n    font-size: 70px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const PostContent = styled.div`\n  align-self: center;\n`;\n\nexport const PostTitle = styled.h2`\n  font-size: 21px;\n  font-weight: 700;\n  color: ${themeGet('colors.textColor', '#292929')};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  font-family: 'Fira Sans', sans-serif;\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n  }\n  @media (max-width: 1200px) {\n    font-size: 21px;\n  }\n  @media (max-width: 990px) {\n    font-size: 19px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 17px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet('fontSizes.3', '15')}px;\n  color: ${themeGet('textColor', '#292929')};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n\nexport const PostDateAndPreview = styled.div`\n  position: relative;\n  margin-right: 45px;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 170px;\n  width: 170px;\n  @media (max-width: 1200px) {\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    height: auto;\n    width: auto;\n  }\n`;\n\nexport const ReadMore = styled.div`\n  margin-top: 16px;\n  a {\n    font-size: 13px;\n    font-weight: 500;\n    color: ${themeGet('textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    &:hover {\n      color: ${themeGet('primary', '#D10068')};\n    }\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport Img from 'gatsby-image';\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  Excerpt,\n  PostContent,\n  PostTags,\n  PostDateAndPreview,\n  ReadMore,\n} from './post-card-minimal.style';\n\ninterface PostCardMinimalProps {\n  image?: any;\n  title: string;\n  description?: string;\n  url: string;\n  date?: string;\n  tags?: [];\n  className?: string;\n  imageType?: 'fixed' | 'fluid';\n}\n\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  tags,\n  className,\n  imageType,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['post_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(' ')} {...props}>\n      <PostDetails className=\"post_details\">\n        <PostDateAndPreview>\n          {date && (\n            <PostDate\n              dangerouslySetInnerHTML={{\n                __html: date,\n              }}\n              className=\"post_date\"\n            />\n          )}\n          {image == null ? null : (\n            <PostPreview className=\"post_preview\">\n              <Link to={\"/\"+url}>\n                {imageType === 'fluid' ? (\n                  <Img fluid={image} alt=\"post preview\" />\n                ) : (\n                  <Img fixed={image} alt=\"post preview\" />\n                )}\n              </Link>\n            </PostPreview>\n          )}\n        </PostDateAndPreview>\n\n        <PostContent className=\"post_content\">\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n          <PostTitle className=\"post_title\">\n            <Link to={\"/\"+url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n          <ReadMore>\n            <Link to={\"/\"+url}>Read More</Link>\n          </ReadMore>\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  );\n};\n\nPostCardMinimal.defaultProps = {\n  imageType: 'fluid',\n};\n\nexport default PostCardMinimal;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport PostCardMinimal from '../components/post-card-minimal/post-card-minimal';\nimport Pagination from '../components/pagination/pagination';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { BlogPostsWrapper } from './templates.style';\n\nconst BlogList = (props: any) => {\n  const { data } = props;\n  const Posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1 ? '/page/1' : `/page/${(currentPage - 1).toString()}`;\n  const nextPage = `/page/${(currentPage + 1).toString()}`;\n  const PrevLink = !isFirst && prevPage;\n  const NextLink = !isLast && nextPage;\n\n  return (\n    <Layout>\n      <SEO title={`Page ${currentPage}`} />\n\n      <BlogPostsWrapper>\n        {Posts.map(({ node }: any) => {\n          return (\n            <PostCardMinimal\n              key={node.fields.slug}\n              title={node.frontmatter.title || node.fields.slug}\n              image={\n                node.frontmatter.cover == null\n                  ? null\n                  : node.frontmatter.cover.childImageSharp.fluid\n              }\n              url={node.fields.slug}\n              description={node.frontmatter.description || node.excerpt}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n            />\n          );\n        })}\n\n        <Pagination\n          prevLink={PrevLink}\n          nextLink={NextLink}\n          currentPage={`${currentPage}`}\n          totalPage={`${numPages}`}\n        />\n      </BlogPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    sitePage {\n      path\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\n            title\n            description\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 170, maxHeight: 170, quality: 90) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PrevPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const NextPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const PageNumber = styled.div``;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\nimport {\n  PaginationWrapper,\n  PrevPage,\n  NextPage,\n  PageNumber,\n} from './pagination.style';\n\ntype PaginationProps = {\n  prevLink?: string | undefined | null | boolean;\n  nextLink?: string | undefined | null | boolean;\n  currentPage: string;\n  totalPage: string;\n  className?: string;\n};\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\n  prevLink,\n  nextLink,\n  currentPage,\n  totalPage,\n  className,\n  ...props\n}) => {\n  return (\n    <PaginationWrapper {...props} className={className}>\n      <PrevPage>\n        {prevLink && (\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\n            <IoMdArrowRoundBack />\n          </Link>\n        )}\n      </PrevPage>\n\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\n\n      <NextPage>\n        {nextLink && (\n          <Link to={`${nextLink}`} aria-label=\"Next\">\n            <IoMdArrowRoundForward />\n          </Link>\n        )}\n      </NextPage>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n"],"sourceRoot":""}