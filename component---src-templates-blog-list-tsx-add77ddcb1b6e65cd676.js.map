{"version":3,"sources":["webpack:///./src/components/post-card-minimal/post-card-minimal.style.tsx","webpack:///./src/components/post-card-minimal/post-card-minimal.tsx","webpack:///./src/templates/templates.style.tsx","webpack:///./src/templates/blog-list.tsx","webpack:///./src/components/pagination/pagination.style.tsx","webpack:///./src/components/pagination/pagination.tsx"],"names":["PostCardWrapper","styled","div","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","h2","Excerpt","p","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","image","title","description","url","date","tags","className","imageType","props","addAllClasses","push","join","dangerouslySetInnerHTML","__html","to","fluid","alt","fixed","map","tag","index","key","defaultProps","BlogPostsWrapper","RelatedPostWrapper","RelatedPostTitle","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","BlogList","Posts","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","node","fields","slug","frontmatter","cover","childImageSharp","excerpt","prevLink","nextLink","totalPage","PaginationWrapper","PrevPage","NextPage","PageNumber","Pagination","aria-label"],"mappings":"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","file":"component---src-templates-blog-list-tsx-add77ddcb1b6e65cd676.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n  &:hover {\n    .post_preview {\n      transform: translateY(0);\n    }\n    .post_date {\n      transform: translateY(100%);\n    }\n  }\n`;\n\nexport const PostPreview = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  transition: 0.35s ease-in-out;\n  img {\n    border-radius: 3px;\n  }\n  @media (max-width: 1024px) {\n    transform: translateY(0);\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n    width: auto;\n    height: auto;\n    position: relative;\n    transform: translateY(0);\n  }\n`;\n\nexport const PostDetails = styled.div`\n  display: flex;\n  @media (max-width: 575px) {\n    flex-direction: column;\n  }\n`;\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${themeGet('colors.textColor', '#292929')};\n  transition: 0.35s ease-in-out;\n  @media (max-width: 1200px) {\n    font-size: 70px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const PostContent = styled.div`\n  align-self: center;\n`;\n\nexport const PostTitle = styled.h2`\n  font-size: 21px;\n  font-weight: 700;\n  color: ${themeGet('colors.textColor', '#292929')};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  font-family: 'Fira Sans', sans-serif;\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n  }\n  @media (max-width: 1200px) {\n    font-size: 21px;\n  }\n  @media (max-width: 990px) {\n    font-size: 19px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 17px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet('fontSizes.3', '15')}px;\n  color: ${themeGet('textColor', '#292929')};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n\nexport const PostDateAndPreview = styled.div`\n  position: relative;\n  margin-right: 45px;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 170px;\n  width: 170px;\n  @media (max-width: 1200px) {\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    height: auto;\n    width: auto;\n  }\n`;\n\nexport const ReadMore = styled.div`\n  margin-top: 16px;\n  a {\n    font-size: 13px;\n    font-weight: 500;\n    color: ${themeGet('textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    &:hover {\n      color: ${themeGet('primary', '#D10068')};\n    }\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport Img from 'gatsby-image';\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  Excerpt,\n  PostContent,\n  PostTags,\n  PostDateAndPreview,\n  ReadMore,\n} from './post-card-minimal.style';\n\ninterface PostCardMinimalProps {\n  image?: any;\n  title: string;\n  description?: string;\n  url: string;\n  date?: string;\n  tags?: [];\n  className?: string;\n  imageType?: 'fixed' | 'fluid';\n}\n\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  tags,\n  className,\n  imageType,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['post_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(' ')} {...props}>\n      <PostDetails className=\"post_details\">\n        <PostDateAndPreview>\n          {date && (\n            <PostDate\n              dangerouslySetInnerHTML={{\n                __html: date,\n              }}\n              className=\"post_date\"\n            />\n          )}\n          {image == null ? null : (\n            <PostPreview className=\"post_preview\">\n              <Link to={\"/\"+url}>\n                {imageType === 'fluid' ? (\n                  <Img fluid={image} alt=\"post preview\" />\n                ) : (\n                  <Img fixed={image} alt=\"post preview\" />\n                )}\n              </Link>\n            </PostPreview>\n          )}\n        </PostDateAndPreview>\n\n        <PostContent className=\"post_content\">\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n          <PostTitle className=\"post_title\">\n            <Link to={\"/\"+url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n          <ReadMore>\n            <Link to={\"/\"+url}>Read More</Link>\n          </ReadMore>\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  );\n};\n\nPostCardMinimal.defaultProps = {\n  imageType: 'fluid',\n};\n\nexport default PostCardMinimal;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const RelatedPostWrapper = styled.div`\n  margin: 0 auto;\n  padding-left: 75px;\n  padding-right: 75px;\n  @media (min-width: 1550px) {\n    width: 1500px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  @media (max-width: 990px) {\n    padding: 0 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 0 25px 0 25px;\n  }\n`;\n\nexport const RelatedPostTitle = styled.h2`\n  color: ${themeGet('colors.textColor', '#292929')};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet('fontFamily.0', \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-bottom: 30px;\n\n  &:after {\n    content: '';\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nexport const RelatedPostItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`;\n\nexport const RelatedPostItem = styled.div`\n  flex: 0 0 33.333333333%;\n  max-width: 33.333333333%;\n  padding: 0 15px;\n  @media (max-width: 575px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n    &:nth-child(n + 2) {\n      margin-top: 50px;\n    }\n  }\n  .post_card {\n    &:hover {\n      .post_preview {\n        a {\n          transform: scale(1.05);\n        }\n      }\n    }\n\n    .post_preview {\n      margin-bottom: 16px;\n      overflow: hidden;\n      a {\n        display: block;\n        transition: 0.25s ease-in-out;\n      }\n      &:before {\n        filter: blur(10px);\n      }\n    }\n    .post_title {\n      font-size: 21px;\n      a {\n        display: block;\n        white-space: nowrap;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      @media (max-width: 1400px) {\n        font-size: 19px;\n      }\n      @media (max-width: 1200px) {\n        font-size: 17px;\n      }\n      @media (max-width: 990px) {\n        font-size: 15px;\n      }\n    }\n    .post_content {\n      max-width: 100%;\n    }\n\n    .post_tags {\n      margin-top: 20px;\n      a {\n        @media (max-width: 990px) {\n          font-size: 12px;\n          margin-right: 15px;\n        }\n      }\n    }\n  }\n`;\nexport const TagPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 30px 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n    @media (max-width: 990px) {\n      margin-bottom: 80px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\nexport const TagPageHeading = styled.div`\n  padding-left: 210px;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 120px;\n  position: relative;\n  @media (max-width: 1200px) {\n    padding-left: 160px;\n  }\n  @media (max-width: 990px) {\n    padding-left: 0;\n    font-size: 13px;\n    margin-bottom: 80px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 60px;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    width: 90px;\n    height: 1px;\n    background: #292929;\n    margin-top: 15px;\n  }\n`;\n\nexport const TagName = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet('colors.primary', '#D10068')};\n  margin-bottom: 8px;\n  @media (max-width: 990px) {\n    font-size: 26px;\n  }\n  @media (max-width: 575px) {\n    font-size: 22px;\n  }\n`;\nexport const BlogPostFooter = styled.div`\n  margin: 0 0 0 auto;\n  width: 58%;\n  max-width: 100%;\n  padding-top: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media (max-width: 990px) {\n    padding-top: 40px;\n    width: 100%;\n  }\n  &.center {\n    margin: 0 auto;\n  }\n`;\n\nexport const BlogPostComment = styled.div`\n  margin: 0 0 0 auto;\n  width: 58%;\n  max-width: 100%;\n  padding-top: 80px;\n  @media (max-width: 990px) {\n    padding-top: 60px;\n    width: 100%;\n  }\n  &.center {\n    margin: 0 auto;\n  }\n`;\n\nexport const PostShare = styled.div`\n  display: flex;\n  align-items: center;\n  > span {\n    flex-shrink: 0;\n  }\n  > div,\n  .react-share__ShareButton {\n    cursor: pointer;\n    margin-left: 10px;\n    font-size: 18px;\n    outline: 0;\n    color: ${themeGet('colors.textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    @media (max-width: 767px) {\n      font-size: 18px;\n      margin-left: 20px;\n    }\n    &:hover {\n      color: ${themeGet('colors.primary', '#D10068')};\n    }\n    svg {\n      display: block;\n    }\n  }\n`;\n\nexport const BlogPostDetailsWrapper = styled.div`\n  margin: 0 auto;\n  padding: 90px 0 120px 0;\n  padding-left: 75px;\n  padding-right: 75px;\n  @media (min-width: 1550px) {\n    width: 1500px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  @media (max-width: 1199px) {\n    padding: 80px 35px 80px 35px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 60px 25px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 15px;\n    }\n  }\n`;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport PostCardMinimal from '../components/post-card-minimal/post-card-minimal';\nimport Pagination from '../components/pagination/pagination';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { BlogPostsWrapper } from './templates.style';\n\nconst BlogList = (props: any) => {\n  const { data } = props;\n  const Posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1 ? '/page/1' : `/page/${(currentPage - 1).toString()}`;\n  const nextPage = `/page/${(currentPage + 1).toString()}`;\n  const PrevLink = !isFirst && prevPage;\n  const NextLink = !isLast && nextPage;\n\n  return (\n    <Layout>\n      <SEO title={`Page ${currentPage}`} />\n\n      <BlogPostsWrapper>\n        {Posts.map(({ node }: any) => {\n          return (\n            <PostCardMinimal\n              key={node.fields.slug}\n              title={node.frontmatter.title || node.fields.slug}\n              image={\n                node.frontmatter.cover == null\n                  ? null\n                  : node.frontmatter.cover.childImageSharp.fluid\n              }\n              url={node.fields.slug}\n              description={node.frontmatter.description || node.excerpt}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n            />\n          );\n        })}\n\n        <Pagination\n          prevLink={PrevLink}\n          nextLink={NextLink}\n          currentPage={`${currentPage}`}\n          totalPage={`${numPages}`}\n        />\n      </BlogPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    sitePage {\n      path\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\n            title\n            description\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 170, maxHeight: 170, quality: 90) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PrevPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const NextPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const PageNumber = styled.div``;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\nimport {\n  PaginationWrapper,\n  PrevPage,\n  NextPage,\n  PageNumber,\n} from './pagination.style';\n\ntype PaginationProps = {\n  prevLink?: string | undefined | null | boolean;\n  nextLink?: string | undefined | null | boolean;\n  currentPage: string;\n  totalPage: string;\n  className?: string;\n};\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\n  prevLink,\n  nextLink,\n  currentPage,\n  totalPage,\n  className,\n  ...props\n}) => {\n  return (\n    <PaginationWrapper {...props} className={className}>\n      <PrevPage>\n        {prevLink && (\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\n            <IoMdArrowRoundBack />\n          </Link>\n        )}\n      </PrevPage>\n\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\n\n      <NextPage>\n        {nextLink && (\n          <Link to={`${nextLink}`} aria-label=\"Next\">\n            <IoMdArrowRoundForward />\n          </Link>\n        )}\n      </NextPage>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n"],"sourceRoot":""}